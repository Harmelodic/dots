#!/bin/bash

# Runs the update/upgrade commands on package managers & tools, then outputs the current/new versions

# OS-specific
if [[ "$(uname)" =~ "Darwin" ]]; then
    echo -e "\n=== MACOS ==="

    # macOS uses brew
    type brew 1>/dev/null 2>/dev/null
    if [ $? -eq 0 ]; then
        echo -e "\n--- BREW ---"
        brew update
        brew -v
        brew upgrade
        brew list
        brew upgrade --cask
        brew list --cask
    fi

    # On macOS, gcloud manages itself
    # On Linux, gcloud is managed through a package manager
    type gcloud 1>/dev/null 2>/dev/null
    if [ $? -eq 0 ]; then
        echo -e "\n--- GCLOUD COMPONENTS ---"
        gcloud components update --quiet
        gcloud version | head -1
    fi
elif [[ "$(uname -a)" =~ "MANJARO" ]]; then
    echo -e "\n=== MANJARO ==="
    echo -e "\n--- PACMAN ---"
    sudo pacman -Syu
elif [[ "$(uname -a)" =~ "Ubuntu" ]]; then
    echo -e "\n=== UBUNTU ==="
    echo -e "\n--- APT ---"
    sudo apt update
    sudo apt upgrade

    echo -e "\n--- SNAP ---"
    snap refresh

	type fwupdmgr 1>/dev/null 2>/dev/null
	if [ $? -eq 0 ]; then
        echo -e "\n--- FIRMWARE UPDATE MANAGER ---"
        fwupdmgr upgrade
    fi
else
    echo -e "\nNo OS Specific updates to install for $(uname)"
fi

# OS-agnostic
echo -e "\n=== OS-AGNOSTIC ==="

type npm 1>/dev/null 2>/dev/null
if [ $? -eq 0 ]; then
    echo -e "\n--- NPM ---"
    npm up -g
    npm ls -g --depth=0
fi

type rustup 1>/dev/null 2>/dev/null
if [ $? -eq 0 ]; then
    echo -e "\n--- RUST ---"
    rustup update
    rustup -V
    rustc -V
fi

type mise 1>/dev/null 2>/dev/null
if [ $? -eq 0 ]; then
    echo -e "\n--- MISE-EN-PLACE ---"
    mise upgrade update
    mise self-update
    mise version
    cp "$HOME/dots/mise.config.toml" "$HOME/.config/mise/config.toml" # Overwrite and update default mise config
    mise install # Install any missing mise-configured tools
fi

echo -e "\n--- DOTS ---"
dots upgrade
