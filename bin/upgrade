#!/bin/bash

# Runs the update/upgrade commands on package managers & tools, then outputs the current/new versions

# OS-specific
if [[ "$(uname)" =~ "Darwin" ]]; then
    echo "=> Upgrading macOS software..."

    type brew > /dev/null
    if [ $? -eq 0 ]; then
        echo "-> Updating brew"
        brew update
        brew -v
        brew upgrade
        brew list
        brew upgrade --cask
        brew list --cask
    fi
elif [[ "$(uname -a)" =~ "MANJARO" ]]; then
    echo "=> Upgrading Manjaro software..."
    sudo pacman -Syu
else
    echo -e "\nNo OS Specific updates to install for $(uname)"
fi

# OS-agnostic
echo "=> Upgrading OS-agnostic software..."

type gcloud > /dev/null
if [ $? -eq 0 ]; then
    echo "-> Updating gcloud"
    gcloud components update --quiet
    gcloud version | head -1
fi

type npm > /dev/null
if [ $? -eq 0 ]; then
    echo "-> Updating npm"
    nvm use node
    npm up -g
    npm ls -g --depth=0
fi

type "python3" > /dev/null
if [ $? -eq 0 ]; then
    echo "-> Updating Pip (Python 3)"
    python3 -m pip install --upgrade pip
    python3 -m pip --version
    python3 -m pip list | awk '{print $1}' | tail +3 | xargs python3 -m pip install --upgrade
fi

type rustup > /dev/null
if [ $? -eq 0 ]; then
    echo "-> Updating Rust"
    rustup update
    rustup -V
    rustc -V
fi

[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
type "sdk" > /dev/null
if [ $? -eq 0 ]; then
    echo "-> Updating SDKMAN"
    sdk update
    sdk selfupdate
    sdk version | xargs -I {} echo "{}"
    sdk upgrade
    sdk current | xargs -I {} echo "{}"
fi

echo "-> Updating dots"
dots upgrade
